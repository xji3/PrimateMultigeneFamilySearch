summary.path <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Summary/'
Post.Lemur.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Lemur/Post_Lemur_List.txt'
Post.Tarsier.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Tarsier/Post_Tarsier_List.txt'
Post.NWM.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_NWM/Post_NWM_List.txt'
aaa = read.table(Post.Lemur.list)
aaa
View(aaa)
aaa[1]
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)
View(Post.Lemur.Pairs)
Post.Lemur.Pairs[1]
Post.Lemur.Pairs[1,1]
Post.Lemur.Pairs[1,2]
Post.Lemur.Pairs[2,1]
dim(Post.Lemur.list)
dim(Post.Lemur.Pairs)
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)
for (pair in Post.Lemur.Pairs){}
pair
Post.Lemur.Pairs[1,1]
Post.Lemur.Pairs <- as.list(read.table(Post.Lemur.list, stringsAsFactors = FALSE))
Post.Lemur.Pairs[1]
Post.Lemur.Pairs[1,1]
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)
for (paralog in Post.Lemur.Pairs){
print(paralog)}
paralog
for (paralog in Post.Lemur.Pairs[, 1]){
print(paralog)}
for (paralog in Post.Lemur.Pairs[, 1]){
summary_mat <- NULL
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- cbind(summary_mat, as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names)))
}
assign(paste(paralog, "summary", sep = "_"), summary_mat)
}
View(ENSG00000011523_ENSG00000151320_summary)
rm(list=ls())  # clean up workspace
human.paralog <- read.csv('~/Downloads/Ensembl84_Human_Paralogs.txt')
rm(list=ls())  # clean up workspace
#human.paralog <- read.csv('~/Downloads/Ensembl84_Human_Paralogs.txt')
# show columns
#colnames(human.paralog)
# now see the quality of paralog mapping
#table(human.paralog[, "Human.paralogy.confidence..0.low..1.high."])
library(biomaRt)
# TO install
# source("https://bioconductor.org/biocLite.R")
# biocLite("biomaRt")
sg.dup.data <- read.table("~/Downloads/genomicSuperDups", header = TRUE,
stringsAsFactors = FALSE)
mart <- useMart("ensembl")
datasets <- listDatasets(mart)
mart <- useDataset("hsapiens_gene_ensembl",mart)
listFilters(mart)
listEnsembl()
# Now construct a list of ensembl ids that are located within segmental duplication regions
sg.gene.id.list <- "~/GitFolders/PrimateMultigeneFamilySearch/Segmental_Dup_Gene_ids.txt"
if (file.exists(sg.gene.id.list)){
sg.gene.ensembl.ids <- read.table(sg.gene.id.list)
}else{
sg.gene.ensembl.ids <- NULL
for (row.num in 1:dim(sg.dup.data)[1]){
dup1_genes <-
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = c('chromosome_name', "start", "end"),
values = list(substring(sg.dup.data[row.num, "chrom"], 4),
sg.dup.data[row.num, "chromStart"],
sg.dup.data[row.num, "chromEnd"]), mart = mart)
dup2_genes <-
getBM(attributes=c('ensembl_gene_id','chromosome_name','start_position','end_position'),
filters = c('chromosome_name', "start", "end"),
values = list(substring(sg.dup.data[row.num, "otherChrom"], 4),
sg.dup.data[row.num, "otherStart"],
sg.dup.data[row.num, "otherEnd"]), mart = mart)
if ( dim(dup1_genes)[1] != 0 & dim(dup2_genes)[1] != 0){
sg.gene.ensembl.ids <- unique(c(sg.gene.ensembl.ids, dup1_genes[, 1], dup2_genes[, 2]))
}
if (row.num %% 1000 == 0){
print(paste(toString(round(row.num / dim(sg.dup.data)[1]  * 100, 2)), "%", sep = ""))
}
}
write.table(sg.gene.ensembl.ids[substr(sg.gene.ensembl.ids, 1, 4) == "ENSG"],
sg.gene.id.list, sep = "/n",
row.names = FALSE, col.names = FALSE)
}
summary.path <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Summary/'
Post.Lemur.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Lemur/Post_Lemur_List.txt'
Post.Tarsier.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Tarsier/Post_Tarsier_List.txt'
Post.NWM.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_NWM/Post_NWM_List.txt'
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)
for (paralog in Post.Lemur.Pairs[, 1]){
summary_mat <- NULL
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- cbind(summary_mat, as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names)))
}
}
assign("Post.Lemur.Summary", summary_mat)
View(Post.Lemur.Summary)
summary.path <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Summary/'
Post.Lemur.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Lemur/Post_Lemur_List.txt'
Post.Tarsier.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Tarsier/Post_Tarsier_List.txt'
Post.NWM.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_NWM/Post_NWM_List.txt'
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)
summary_mat <- NULL
for (paralog in Post.Lemur.Pairs[, 1]){
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- cbind(summary_mat, as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names)))
}
}
assign("Post.Lemur.Summary", summary_mat)
paralog
View(summary_mat)
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- cbind(summary_mat, as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names)))
}
summary_file
dim(summary_mat)
aaa = as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names))
dim(aaa)
paralog
Post.Lemur.Pairs <- Post.Lemur.Pairs[Post.Lemur.Pairs[, 1] != "ENSG00000197520_ENSG00000151327", 1]
Post.Lemur.Pairs[1,1]
Post.Lemur.Pairs <- Post.Lemur.Pairs[Post.Lemur.Pairs[, 1] != "ENSG00000197520_ENSG00000151327", ]
summary.path <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Summary/'
Post.Lemur.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Lemur/Post_Lemur_List.txt'
Post.Tarsier.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Tarsier/Post_Tarsier_List.txt'
Post.NWM.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_NWM/Post_NWM_List.txt'
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)
Post.Lemur.Pairs <- Post.Lemur.Pairs[Post.Lemur.Pairs[, 1] != "ENSG00000197520_ENSG00000151327", ]
Post.Lemur.Pairs[1 , 1]
Post.Lemur.Pairs[1]
summary.path <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Summary/'
Post.Lemur.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Lemur/Post_Lemur_List.txt'
Post.Tarsier.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Tarsier/Post_Tarsier_List.txt'
Post.NWM.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_NWM/Post_NWM_List.txt'
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)[, 1]
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)[, 1]
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)[, 1]
Post.Lemur.Pairs <- Post.Lemur.Pairs[Post.Lemur.Pairs != "ENSG00000197520_ENSG00000151327"]
summary_mat <- NULL
for (paralog in Post.Lemur.Pairs){
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- cbind(summary_mat, as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names)))
}
}
paralog
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)[, 1]
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)[, 1]
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)[, 1]
Post.Lemur.Pairs <- Post.Lemur.Pairs[Post.Lemur.Pairs != "ENSG00000197520_ENSG00000151327"
& Post.Lemur.Pairs != "ENSG00000117480_ENSG00000165591"]
summary_mat <- NULL
for (paralog in Post.Lemur.Pairs){
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
summary_mat <- cbind(summary_mat, as.matrix(read.table(summary_file,
row.names = row.names,
col.names = col.names)))
}
}
assign("Post.Lemur.Summary", summary_mat)
summary_mat <- NULL
for (paralog in Post.Lemur.Pairs){
summary_file <- paste(summary.path, 'MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
assign("Post.Lemur.Summary", summary_mat)
View(Post.Lemur.Summary)
table(Post.Lemur.Summary["tau", ])
hist(Post.Lemur.Summary["tau", ])
which.max(Post.Lemur.Summary["tau", ])
Post.Lemur.Summary[, "ENSG00000185432_ENSG00000170439"]
summary_mat <- NULL
for (paralog in Post.Lemur.Pairs){
summary_file <- paste(summary.path, 'Force_MG94_', paralog, "_nonclock_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
assign("Force.Post.Lemur.Summary", summary_mat)
View(Force.Post.Lemur.Summary)
finished.lemur.pairs <- intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
colnames(Post.Lemur.Summary)
colnames(Force.Post.Lemur.Summary)
intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
finished.lemur.pairs <- intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs]
hist(Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs])
rm(list=ls())  # clean up workspace
#human.paralog <- read.csv('~/Downloads/Ensembl84_Human_Paralogs.txt')
# show columns
#colnames(human.paralog)
# now see the quality of paralog mapping
#table(human.paralog[, "Human.paralogy.confidence..0.low..1.high."])
# show columns
#colnames(human.paralog)
summary.path <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Summary/'
Post.Lemur.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Lemur/Post_Lemur_List.txt'
Post.Tarsier.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_Tarsier/Post_Tarsier_List.txt'
Post.NWM.list <- '~/GitFolders/PrimateMultigeneFamilySearch/Ensembl_GeneFamilies/Post_NWM/Post_NWM_List.txt'
Post.Lemur.Pairs <- read.table(Post.Lemur.list, stringsAsFactors = FALSE)[, 1]
Post.Tarsier.Pairs <- read.table(Post.Tarsier.list, stringsAsFactors = FALSE)[, 1]
Post.NWM.Pairs <- read.table(Post.NWM.list, stringsAsFactors = FALSE)[, 1]
#Post.Lemur.Pairs <- Post.Lemur.Pairs[Post.Lemur.Pairs != "ENSG00000197520_ENSG00000151327"
#                                     & Post.Lemur.Pairs != "ENSG00000117480_ENSG00000165591"]
read.summary <- function(pairs, summary.path, model = "MG94", force = FALSE, clock = FALSE){
summary_mat <- NULL
if(force){
force.str = "Force_"
}else{
force.str = ""
}
if(clock){
clock.str = "clock"
}
else{
clock.str = "nonclock"
}
for (paralog in Post.Lemur.Pairs){
summary_file <- paste(summary.path, force.str, model, '_', paralog, "_", clock.str, "_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
return(summary_mata)
}
Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
read.summary <- function(pairs, summary.path, model = "MG94", force = FALSE, clock = FALSE){
summary_mat <- NULL
if(force){
force.str = "Force_"
}else{
force.str = ""
}
if(clock){
clock.str = "clock"
}
else{
clock.str = "nonclock"
}
for (paralog in Post.Lemur.Pairs){
summary_file <- paste(summary.path, force.str, model, '_', paralog, "_", clock.str, "_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
return(summary_mat)
}
Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.lemur.pairs <- intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs]
hist(Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs])
# Post.Lemur
Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.lemur.pairs <- intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs]
hist(Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs])
# Post.Tarsier
Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.Tarsier.pairs <- intersect(colnames(Post.Tarsier.Summary), colnames(Force.Post.Tarsier.Summary))
Post.Tarsier.Summary["ll", finished.Tarsier.pairs] - Force.Post.Tarsier.Summary["ll", finished.Tarsier.pairs]
hist(Post.Tarsier.Summary["ll", finished.Tarsier.pairs] - Force.Post.Tarsier.Summary["ll", finished.Tarsier.pairs])
Post.Tarsier.Pairs[1:5]
Post.Lemur.Pairs[1:5]
Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.lemur.pairs <- intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs]
hist(Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs])
Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.Tarsier.pairs <- intersect(colnames(Post.Tarsier.Summary), colnames(Force.Post.Tarsier.Summary))
Post.Tarsier.Summary["ll", finished.Tarsier.pairs] - Force.Post.Tarsier.Summary["ll", finished.Tarsier.pairs]
read.summary <- function(pairs, summary.path, model = "MG94", force = FALSE, clock = FALSE){
summary_mat <- NULL
if(force){
force.str = "Force_"
}else{
force.str = ""
}
if(clock){
clock.str = "clock"
}
else{
clock.str = "nonclock"
}
for (paralog in pairs){
summary_file <- paste(summary.path, force.str, model, '_', paralog, "_", clock.str, "_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
return(summary_mat)
}
Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Lemur.Summary <- read.summary(Post.Lemur.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.lemur.pairs <- intersect(colnames(Post.Lemur.Summary), colnames(Force.Post.Lemur.Summary))
Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs]
hist(Post.Lemur.Summary["ll", finished.lemur.pairs] - Force.Post.Lemur.Summary["ll", finished.lemur.pairs])
# Post.Tarsier
Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
finished.Tarsier.pairs <- intersect(colnames(Post.Tarsier.Summary), colnames(Force.Post.Tarsier.Summary))
Post.Tarsier.Summary["ll", finished.Tarsier.pairs] - Force.Post.Tarsier.Summary["ll", finished.Tarsier.pairs]
hist(Post.Tarsier.Summary["ll", finished.Tarsier.pairs] - Force.Post.Tarsier.Summary["ll", finished.Tarsier.pairs])
```
Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
pairs = Post.Tarsier.Pairs
model = "MG94"
force = FALSE
clock = FALSE
force.str = ""
clock.str = "nonclock"
for (paralog in pairs){
summary_file <- paste(summary.path, force.str, model, '_', paralog, "_", clock.str, "_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
summary_mat <- NULL
for (paralog in pairs){
summary_file <- paste(summary.path, force.str, model, '_', paralog, "_", clock.str, "_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
summary_mat
return(summary_mat)
read.summary <- function(pairs, summary.path, model = "MG94", force = FALSE, clock = FALSE){
if(force){
force.str = "Force_"
}else{
force.str = ""
}
if(clock){
clock.str = "clock"
}
else{
clock.str = "nonclock"
}
summary_mat <- NULL
for (paralog in pairs){
summary_file <- paste(summary.path, force.str, model, '_', paralog, "_", clock.str, "_summary.txt", sep = "")
if (file.exists(summary_file)){
all <- readLines(summary_file, n = -1)
col.names <- paralog
row.names <- strsplit(all[length(all)], ' ')[[1]][-1]
new.col   <- as.matrix(read.table(summary_file, row.names = row.names, col.names = col.names))
if (dim(new.col)[1] == 99){
summary_mat <- cbind(summary_mat, new.col)
}
}
}
return(summary_mat)
}
Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = FALSE, clock = FALSE)
Force.Post.Tarsier.Summary <- read.summary(Post.Tarsier.Pairs, summary.path, "MG94", force = TRUE, clock = FALSE)
hist(Post.Tarsier.Summary["tau",])
